#!/bin/bash

# Please don't change this.
MAX_POINTS=150

# TODO 1: Function check for task 1
test_curatare() {
	n_tests=20
	src_names=(curatare.c curatare.cpp Curatare.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '2.0 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=40

	run_problem curatare 1
}

# TODO 2: Function check for task 2
test_fortificatii() {
    n_tests=35
    src_names=(fortificatii.c fortificatii.cpp Fortificatii.java)
    tests=($(seq 0 $(($n_tests - 1))))
    points=($(printf '1.0 %.0s' $(seq 0 $(($n_tests - 1)))))
    pmax=35

    run_problem fortificatii 2
}

# TODO 3: Function check for task 3
test_beamdrone() {
	n_tests=20
	src_names=(beamdrone.c beamdrone.cpp Beamdrone.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '2.0 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=40

	run_problem beamdrone 3
}

# TODO 4: Function check for task 4 (bonus)
test_curse() {
	n_tests=25
	src_names=(curse.c curse.cpp Curse.java)
	tests=($(seq 0 $(($n_tests - 1))))
	points=($(printf '1.0 %.0s' $(seq 0 $(($n_tests - 1)))))
	pmax=25

	run_problem curse 4
}

# TODO 5: Put your tasks in this function
test_homework() {
	 if [[ "$1" = "1" || "$1" = "curatare" ]]; then
	 	test_curatare
	elif [[ "$1" = "2" || "$2" = "fortificatii" ]]; then
		test_fortificatii
	elif [[ "$1" = "3" || "$3" = "beamdrone" ]]; then
		test_beamdrone
	elif [[ "$1" = "4" || "$4" = "curse" ]]; then
		test_curse
	elif [[ "$1" = "cs" ]]; then
		echo "skip running tests"
	else
		test_curatare
		test_fortificatii
		test_beamdrone
		test_curse
	fi
}

# TODO 6:Define bonus task
BONUS_TASK=curse

# Please don't change this.
source "$(dirname "{0}")"/_utils/base_check.sh